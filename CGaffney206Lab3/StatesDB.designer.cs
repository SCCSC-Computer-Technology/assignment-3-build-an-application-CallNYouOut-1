#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CGaffney206Lab3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class StatesDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    #endregion
		
		public StatesDBDataContext() : 
				base(global::CGaffney206Lab3.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatesDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private string _State1;
		
		private System.Nullable<long> _Population;
		
		private string _State_Flag_Description;
		
		private string _State_Flower;
		
		private string _State_Bird;
		
		private string _State_Colors;
		
		private string @__1st_Largest_City;
		
		private string @__2nd_Largest_City;
		
		private string @__3rd_Largest_City;
		
		private string _State_Capitol;
		
		private System.Nullable<decimal> _Median_Income;
		
		private System.Nullable<int> _Percentage_of_Computer_Related_Jobs_Offered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnState1Changing(string value);
    partial void OnState1Changed();
    partial void OnPopulationChanging(System.Nullable<long> value);
    partial void OnPopulationChanged();
    partial void OnState_Flag_DescriptionChanging(string value);
    partial void OnState_Flag_DescriptionChanged();
    partial void OnState_FlowerChanging(string value);
    partial void OnState_FlowerChanged();
    partial void OnState_BirdChanging(string value);
    partial void OnState_BirdChanged();
    partial void OnState_ColorsChanging(string value);
    partial void OnState_ColorsChanged();
    partial void On_1st_Largest_CityChanging(string value);
    partial void On_1st_Largest_CityChanged();
    partial void On_2nd_Largest_CityChanging(string value);
    partial void On_2nd_Largest_CityChanged();
    partial void On_3rd_Largest_CityChanging(string value);
    partial void On_3rd_Largest_CityChanged();
    partial void OnState_CapitolChanging(string value);
    partial void OnState_CapitolChanged();
    partial void OnMedian_IncomeChanging(System.Nullable<decimal> value);
    partial void OnMedian_IncomeChanged();
    partial void OnPercentage_of_Computer_Related_Jobs_OfferedChanging(System.Nullable<int> value);
    partial void OnPercentage_of_Computer_Related_Jobs_OfferedChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State", Storage="_State1", DbType="NVarChar(50)")]
		public string State1
		{
			get
			{
				return this._State1;
			}
			set
			{
				if ((this._State1 != value))
				{
					this.OnState1Changing(value);
					this.SendPropertyChanging();
					this._State1 = value;
					this.SendPropertyChanged("State1");
					this.OnState1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="BigInt")]
		public System.Nullable<long> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Flag Description]", Storage="_State_Flag_Description", DbType="NVarChar(50)")]
		public string State_Flag_Description
		{
			get
			{
				return this._State_Flag_Description;
			}
			set
			{
				if ((this._State_Flag_Description != value))
				{
					this.OnState_Flag_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._State_Flag_Description = value;
					this.SendPropertyChanged("State_Flag_Description");
					this.OnState_Flag_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Flower]", Storage="_State_Flower", DbType="NVarChar(50)")]
		public string State_Flower
		{
			get
			{
				return this._State_Flower;
			}
			set
			{
				if ((this._State_Flower != value))
				{
					this.OnState_FlowerChanging(value);
					this.SendPropertyChanging();
					this._State_Flower = value;
					this.SendPropertyChanged("State_Flower");
					this.OnState_FlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Bird]", Storage="_State_Bird", DbType="NVarChar(50)")]
		public string State_Bird
		{
			get
			{
				return this._State_Bird;
			}
			set
			{
				if ((this._State_Bird != value))
				{
					this.OnState_BirdChanging(value);
					this.SendPropertyChanging();
					this._State_Bird = value;
					this.SendPropertyChanged("State_Bird");
					this.OnState_BirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Colors]", Storage="_State_Colors", DbType="NVarChar(50)")]
		public string State_Colors
		{
			get
			{
				return this._State_Colors;
			}
			set
			{
				if ((this._State_Colors != value))
				{
					this.OnState_ColorsChanging(value);
					this.SendPropertyChanging();
					this._State_Colors = value;
					this.SendPropertyChanged("State_Colors");
					this.OnState_ColorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1st Largest City]", Storage="__1st_Largest_City", DbType="NVarChar(50)")]
		public string _1st_Largest_City
		{
			get
			{
				return this.@__1st_Largest_City;
			}
			set
			{
				if ((this.@__1st_Largest_City != value))
				{
					this.On_1st_Largest_CityChanging(value);
					this.SendPropertyChanging();
					this.@__1st_Largest_City = value;
					this.SendPropertyChanged("_1st_Largest_City");
					this.On_1st_Largest_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2nd Largest City]", Storage="__2nd_Largest_City", DbType="NVarChar(50)")]
		public string _2nd_Largest_City
		{
			get
			{
				return this.@__2nd_Largest_City;
			}
			set
			{
				if ((this.@__2nd_Largest_City != value))
				{
					this.On_2nd_Largest_CityChanging(value);
					this.SendPropertyChanging();
					this.@__2nd_Largest_City = value;
					this.SendPropertyChanged("_2nd_Largest_City");
					this.On_2nd_Largest_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[3rd Largest City]", Storage="__3rd_Largest_City", DbType="NVarChar(50)")]
		public string _3rd_Largest_City
		{
			get
			{
				return this.@__3rd_Largest_City;
			}
			set
			{
				if ((this.@__3rd_Largest_City != value))
				{
					this.On_3rd_Largest_CityChanging(value);
					this.SendPropertyChanging();
					this.@__3rd_Largest_City = value;
					this.SendPropertyChanged("_3rd_Largest_City");
					this.On_3rd_Largest_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Capitol]", Storage="_State_Capitol", DbType="NVarChar(50)")]
		public string State_Capitol
		{
			get
			{
				return this._State_Capitol;
			}
			set
			{
				if ((this._State_Capitol != value))
				{
					this.OnState_CapitolChanging(value);
					this.SendPropertyChanging();
					this._State_Capitol = value;
					this.SendPropertyChanged("State_Capitol");
					this.OnState_CapitolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Median Income]", Storage="_Median_Income", DbType="Money")]
		public System.Nullable<decimal> Median_Income
		{
			get
			{
				return this._Median_Income;
			}
			set
			{
				if ((this._Median_Income != value))
				{
					this.OnMedian_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Median_Income = value;
					this.SendPropertyChanged("Median_Income");
					this.OnMedian_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percentage of Computer-Related Jobs Offered]", Storage="_Percentage_of_Computer_Related_Jobs_Offered", DbType="Int")]
		public System.Nullable<int> Percentage_of_Computer_Related_Jobs_Offered
		{
			get
			{
				return this._Percentage_of_Computer_Related_Jobs_Offered;
			}
			set
			{
				if ((this._Percentage_of_Computer_Related_Jobs_Offered != value))
				{
					this.OnPercentage_of_Computer_Related_Jobs_OfferedChanging(value);
					this.SendPropertyChanging();
					this._Percentage_of_Computer_Related_Jobs_Offered = value;
					this.SendPropertyChanged("Percentage_of_Computer_Related_Jobs_Offered");
					this.OnPercentage_of_Computer_Related_Jobs_OfferedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
